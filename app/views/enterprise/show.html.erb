
<div class="container" >

  <table style="margin-top: 15px; margin-bottom: 15px;">
    <tr>
      <td><%= link_to image_tag('versioneye-round-logo.png', :style => "width: 140px;"), root_path %></td>
      <td style="padding-left: 5px; font-size: 20px;">
        On your own server!<br/>Integrated with your private repositories and your continuous integration system!
      </td>
    </tr>
  </table>

</div>


    <div class="content-section-a">
      <%= render "shared/who_is_using_it" %>
    </div>


    <div class="content-section-b">
      <div class="container">
        <h2 >Which binary repositories are supported?</h2>
        <div class="well-white" >
          <p class="lead">
            The whole point of running VersionEye as on-premise installation
            is that it can crawl internal binary repositories,
            such as Nexus Pro, Artifactory Enterprise and other ones.
            That way VersionEye gets a complete list of <b>ALL</b> your dependencies!
            The open source dependencies AND your private components as well!
            Currently these binary repositories are supported:
          </p>
          <ul style="font-weight: normal; font-size: 1.3em;">
            <li><a href="http://www.sonatype.com/nexus">Nexus Pro</a></li>
            <li><a href="http://www.jfrog.com/open-source/#os-arti">Artifactory Enterprise</a></li>
            <li><a href="https://archiva.apache.org">Apache Archiva</a></li>
            <li><a href="http://cocoapods.org/">CocoaPods</a></li>
            <li><a href="https://github.com/composer/satis">Satis</a></li>
          </ul>
        </div>
      </div>
    </div>


    <div class="content-section-a">
      <div class="container">

        <div >
          <h2 >Which git repositories are supported?</h2>
          <div class="well-white" style="margin-bottom: 0px;" >
              <p class="lead">
                VersionEye can be connected with different git servers.
                That way it's possible to use the Git servers API as single sign on (OAuth)
                for VersionEye. Currently this git servers are supported:
              </p>
              <ul style="font-weight: normal; font-size: 1.3em;">
                <li><a href="https://enterprise.github.com/">GitHub Enterprise</a></li>
                <li><a href="https://www.atlassian.com/software/stash">Atlassian Stash</a></li>
                <li><a href="https://bitbucket.org/">Atlassian Bitbucket</a></li>
              </ul>
              <p class="lead">
                <a href="https://about.gitlab.com/">GitLab</a> support is coming soon!<br/>
                <br/>
                Simply turn on the switch for project files in git repositories
                which should be monitored by VersionEye!
              </p>
          </div>
        </div>
        <p class="lead">
          <%=  %>
          <%= link_to image_tag("marketing/01-veye-git-integration.png", :style => "margin-left: 1px; width: 100%"), asset_path("marketing/01-veye-git-integration.png") %>
        </p>
        <p class="lead">
          Turn on the switch and receive daily email notifications
          about your dependencies. <br/><b>It was never easier to stay up-to-date!</b>
        </p>

      </div>
    </div>


    <div class="content-section-b">
      <div class="container">
        <h2 >How is the integration with CI systems?</h2>
        <div class="well-white" >
          <p class="lead">
            For all major build tools there is a native VersionEye plugin.
            The native plugins are resolving the dependencies localy and only send the results
            to the VersionEye API to create or update a VersionEye project.
            Specially for JVM projects where the dependencies are distributed over multiple
            files it is always recommended to use the native VersionEye plugin for the corresponding
            build tool.
          </p>
          <p class="lead">
            Pretty much all plugins have goals which check the response for security vulnerabilities
            &amp; license violations and exit with an non 0 exit code if something is wrong.
            The VersionEye Maven Plugin for example has a goal "securityAndLicenseCheck" which
            checks all dependencies for security vulnerabilities and license violations.
            If that goal is called on an continuous integration server it breaks the build if a dependency has an issue.
            For Maven reactor builds this goal can be executed on the parent pom.
            That works with all kind of CI systems like Jenkins, Bamboo, TravisCI, CodeShip, CircleCI and many more.
          </p>
          <pre class="prettyprint"><code>mvn versioneye:securityAndLicenseCheck</code></pre>
          <p class="lead" style="text-align: center;">
            <%= link_to image_tag("marketing/01-veye-ci-integration.png", :class => "img-border img-rounded", :style => "width: 100%;"), asset_path("marketing/01-veye-ci-integration.png") %>
          </p>
        </div>
      </div>
    </div>


    <div class="content-section-a">
      <div class="container">
        <h2 >How do I install VersionEye?</h2>
        <div class="well-white" >
          <p class="lead">
            VersionEye is completely open source! The source code repsoitories are on <a href="https://github.com/versioneye">GitHub</a> and every time we do a deployment to VersionEye.com,
            new Docker images are build and published to <a href="https://hub.docker.com/u/versioneye/">Docker Hub</a>.
            In this <a href="https://github.com/versioneye/ops_contrib">repository</a> you find a description
            how to spin up your own VersionEye instance.
            <br/><br/>
            After the instance has booted successfully you can open a browser and navigate to the
            IP address of the instance. On the default HTTP port 80 the VersionEye web
            application will come up, where you can activate the instance with an valid API key.
          </p>
          <p class="lead">
            After activation you can login with admin/admin and connect your VersionEye
            instance with your private SMTP / MS Exchange, LDAP / Active Directory, binary repository and git servers.
            And if you run your VersionEye instance in your DMZ behind your Enterprise firewall,
            you can configure a Proxy server which will be used for connections to the internet.
          </p>
          <p class="lead" style="text-align: center;">
            <%= image_tag "marketing/01-veye-global-settings.png", :class => "img-border img-rounded", :style => "width: 100%;" %>
          </p>
        </div>
      </div>
    </div>

    <div class="content-section-b">
      <div class="container">
        <h2 >How are software updates rolled out?</h2>
        <div class="well-white" >
          <p class="lead">
            VersionEye is shipped as a set of Docker images. All Docker images are publicly
            available at <a href="https://hub.docker.com/u/versioneye/">Docker Hub</a>.
            Software Updates are provided as new Docker images. There is an update script in
            the <a href="https://github.com/versioneye/ops_contrib">versioneye/ops_contrib</a> repository.
            With that the newest VersionEye Docker images can be downloded any time, via a secure SSL
            connection! <b>Updating software has never been easier!</b>
          </p>
        </div>
      </div>
    </div>

    <div class="content-section-a">
      <div class="container">
        <h2>Which resources are needed for a VersionEye instance?</h2>
        <div class="well-white" >
          <p class="lead">
            The minimum requirements are:
            <ul>
              <li>1 CPU 2.0 GHz</li>
              <li>4 GB RAM</li>
              <li>20 GB HD</li>
            </ul>
          </p>
          <p class="lead">
            Depending on your setup and the amount of the components in your private
            repositories more resources are required. We recommend to run it with:
            <ul>
              <li>2 CPU 2.5 GHz</li>
              <li>8 GB RAM</li>
              <li>100 GB HD</li>
            </ul>
          </p>
        </div>
      </div>
    </div>


    <div class="content-section-b">
      <div class="container">
        <h2 >How to keep the database up-to-date?</h2>
        <div class="well-white" >
          <p class="lead">
            <a href="https://www.versioneye.com">VersionEye.com</a> is monitoring
            1.4 Million open source projects on a daily basis. The crawlers are running 24/7 to
            keep our database in the cloud up-to-date. With your own VersionEye instance you can crawl your
            private repositories in-house, but then your are still missing all the open
            source libraries from the Internet. For sure you don't want to run &amp;
            maintain a huge crawling cluster in your company ;-) That's why there is a
            sync mechanism between each VersionEye instance and VersionEye.com.
            The self hosted VersionEye instance pulls data from the VersionEye.com API to keep the
            local database up-to-date.
          </p>
          <p style="text-align: center;">
            <%= image_tag "marketing/VersionEyeEnterpriseArchitecture.png", :style => "width: 100%;" %>
          </p>
          <p class="lead"><br/>
            When uploading a pom.xml (or any other project file) to your VersionEye instance,
            all open source dependencies are displayed as unknown.
            But in the background your instance will resolve all dependencies via the VersionEye API and pull in
            the desired data into the local database. Depending on the number of the dependencies
            this can take a couple of minutes. Besides that there is a nightly sync, to keep the metadata
            for the local dependencies up-to-date.
          </p>
        </div>
      </div>
    </div>


    <div class="content-section-a">
      <div class="container">

        <div class="row">
          <div class="col-md-12">
        <h2 >Interested?</h2>
          <p class="lead">
            The pricing depends on the number of open source components you
            want to sync every day to your private instance and the desired SLA.
            If you are interested please fill out the form below and we will reach out to you.
          </p>

          <p style="padding-top: 15px;">
          <%= form_tag( enterprise_create_path, :method => "post", :class => "form-horizontal") do  %>

            <div >
              <%= label_tag :scm, "Git Server", :class => "control-label", :for => "scm" %>
              <div class="controls" >
                <select name="scm"  id="scm" class="form-control">
                  <option value="githubcom" <%= "selected" if @ent_lead['scm'] == 'githubcom' %> >GitHub.com</option>
                  <option value="github"    <%= "selected" if @ent_lead['scm'] == 'github' %> >GitHub Enterprise</option>
                  <option value="stash"     <%= "selected" if @ent_lead['scm'] == 'stash' %> >Atlassian Stash</option>
                  <option value="gitlab"    <%= "selected" if @ent_lead['scm'] == 'gitlab' %> >GitLab</option>
                  <option value="other"     <%= "selected" if @ent_lead['scm'] == 'else' %> >Other</option>
                </select>
              </div>
            </div>

            <div >
              <%= label_tag :repository, "Binary Repository", :class => "control-label", :for => "repository" %>
              <div class="controls" >
                <select name="repository"  id="repository" class="form-control" >
                  <option value="nexus" <%= "selected" if @ent_lead['repository'] == 'nexus' %> >Sonatype Nexus</option>
                  <option value="artifactory" <%= "selected" if @ent_lead['repository'] == 'artifactory' %> >JFrog Artifactory</option>
                  <option value="archiva" <%= "selected" if @ent_lead['repository'] == 'archiva' %> >Apache Archiva</option>
                  <option value="cocoapods" <%= "selected" if @ent_lead['repository'] == 'cocoapods' %> >CocoaPods</option>
                  <option value="satis" <%= "selected" if @ent_lead['repository'] == 'satis' %> >Satis</option>
                  <option value="other" <%= "selected" if @ent_lead['repository'] == 'else' %> >Other</option>
                </select>
              </div>
            </div>

            <div >
              <%= label_tag :ci, "CI Server", :class => "control-label", :for => "ci" %>
              <div class="controls" >
                <select name="ci"  id="ci" class="form-control" >
                  <option value="jenkins" <%= "selected" if @ent_lead['ci'] == 'jenkins' %> >Jenkins</option>
                  <option value="teamcity" <%= "selected" if @ent_lead['ci'] == 'teamcity' %> >TeamCity</option>
                  <option value="bamboo" <%= "selected" if @ent_lead['ci'] == 'bamboo' %> >Atlassian Bamboo</option>
                  <option value="other" <%= "selected" if @ent_lead['ci'] == 'else' %> >Other</option>
                </select>
              </div>
            </div>

            <div >
              <%= label_tag :virtualization, "Virtualization", :class => "control-label", :for => "virtualization" %>
              <div class="controls" >
                <select name="virtualization"  id="virtualization" class="form-control" >
                  <option value="docker" <%= "selected" if @ent_lead['virtualization'] == 'docker' %> >Docker</option>
                  <option value="ec2" <%= "selected" if @ent_lead['virtualization'] == 'ec2' %> >AWS EC2</option>
                  <option value="vmware" <%= "selected" if @ent_lead['virtualization'] == 'vmware' %> >VMWare</option>
                  <option value="vb" <%= "selected" if @ent_lead['virtualization'] == 'vb' %> >VirtualBox</option>
                  <option value="kvm" <%= "selected" if @ent_lead['virtualization'] == 'kvm' %> >KVM</option>
                  <option value="parallels" <%= "selected" if @ent_lead['virtualization'] == 'parallels' %> >Parallels</option>
                  <option value="xen" <%= "selected" if @ent_lead['virtualization'] == 'xen' %> >Xen</option>
                  <option value="other" <%= "selected" if @ent_lead['virtualization'] == 'else' %> >Other</option>
                </select>
              </div>
            </div>

            <div >
              <%= label_tag :name, "Package Managers", :class => "control-label", :for => "package_managers" %>
              <div class="controls">
                <%= text_field_tag :package_managers, @ent_lead['package_managers'], :id => "package_managers", :class => 'form-control', :value => 'Maven, NPM' %>
              </div>
            </div>

            <div >
              <%= label_tag :name, "Name", :class => "control-label", :for => "name" %>
              <div class="controls">
                <%= text_field_tag :name, @ent_lead['name'], :id => "name", :class => 'form-control' %>
              </div>
            </div>

            <div >
              <%= label_tag :email, "Email", :class => "control-label", :for => "email" %>
              <div class="controls">
                <%= text_field_tag :email, @ent_lead['email'], :id => "email", :class => 'form-control' %>
              </div>
            </div>

            <div >
              <%= label_tag :note, "Your use case", :class => "control-label", :for => "note" %>
              <div class="controls">
                <%= text_area_tag :note, nil, :size=>"27x4", :class => "span4", :class => 'form-control' %>
              </div>
            </div>

            <div >
              <div class="control-label"></div>
              <div class="controls">
                <button type="submit" class="btn btn-large btn-primary" >Submit</button>
              </div>
            </div>

          <% end %>
          </p>

          </div>
        </div>

      </div>
  </div>




